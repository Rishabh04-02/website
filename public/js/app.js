/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

"use strict";
eval("\"use strict\";\n\n/*! AdminLTE app.js\r\n * ================\r\n * Main JS application file for AdminLTE v2. This file\r\n * should be included in all pages. It controls some layout\r\n * options and implements exclusive AdminLTE plugins.\r\n *\r\n * @Author  Almsaeed Studio\r\n * @Support <http://www.almsaeedstudio.com>\r\n * @Email   <abdullah@almsaeedstudio.com>\r\n * @version 2.3.6\r\n * @license MIT <http://opensource.org/licenses/MIT>\r\n */\n\n//Make sure jQuery has been loaded before app.js\nif (typeof jQuery === \"undefined\") {\n    throw new Error(\"AdminLTE requires jQuery\");\n}\n\n/* AdminLTE\r\n *\r\n * @type Object\r\n * @description $.AdminLTE is the main object for the template's app.\r\n *              It's used for implementing functions and options related\r\n *              to the template. Keeping everything wrapped in an object\r\n *              prevents conflict with other plugins and is a better\r\n *              way to organize our code.\r\n */\n$.AdminLTE = {};\n\n/* --------------------\r\n * - AdminLTE Options -\r\n * --------------------\r\n * Modify these options to suit your implementation\r\n */\n$.AdminLTE.options = {\n    //Add slimscroll to navbar menus\n    //This requires you to load the slimscroll plugin\n    //in every page before app.js\n    navbarMenuSlimscroll: true,\n    navbarMenuSlimscrollWidth: \"3px\", //The width of the scroll bar\n    navbarMenuHeight: \"200px\", //The height of the inner menu\n    //General animation speed for JS animated elements such as box collapse/expand and\n    //sidebar treeview slide up/down. This options accepts an integer as milliseconds,\n    //'fast', 'normal', or 'slow'\n    animationSpeed: 500,\n    //Sidebar push menu toggle button selector\n    sidebarToggleSelector: \"[data-toggle='offcanvas']\",\n    //Activate sidebar push menu\n    sidebarPushMenu: true,\n    //Activate sidebar slimscroll if the fixed layout is set (requires SlimScroll Plugin)\n    sidebarSlimScroll: true,\n    //Enable sidebar expand on hover effect for sidebar mini\n    //This option is forced to true if both the fixed layout and sidebar mini\n    //are used together\n    sidebarExpandOnHover: false,\n    //BoxRefresh Plugin\n    enableBoxRefresh: true,\n    //Bootstrap.js tooltip\n    enableBSToppltip: true,\n    BSTooltipSelector: \"[data-toggle='tooltip']\",\n    //Enable Fast Click. Fastclick.js creates a more\n    //native touch experience with touch devices. If you\n    //choose to enable the plugin, make sure you load the script\n    //before AdminLTE's app.js\n    enableFastclick: false,\n    //Control Sidebar Options\n    enableControlSidebar: true,\n    controlSidebarOptions: {\n        //Which button should trigger the open/close event\n        toggleBtnSelector: \"[data-toggle='control-sidebar']\",\n        //The sidebar selector\n        selector: \".control-sidebar\",\n        //Enable slide over content\n        slide: true\n    },\n    //Box Widget Plugin. Enable this plugin\n    //to allow boxes to be collapsed and/or removed\n    enableBoxWidget: true,\n    //Box Widget plugin options\n    boxWidgetOptions: {\n        boxWidgetIcons: {\n            //Collapse icon\n            collapse: 'fa-minus',\n            //Open icon\n            open: 'fa-plus',\n            //Remove icon\n            remove: 'fa-times'\n        },\n        boxWidgetSelectors: {\n            //Remove button selector\n            remove: '[data-widget=\"remove\"]',\n            //Collapse button selector\n            collapse: '[data-widget=\"collapse\"]'\n        }\n    },\n    //Direct Chat plugin options\n    directChat: {\n        //Enable direct chat by default\n        enable: true,\n        //The button to open and close the chat contacts pane\n        contactToggleSelector: '[data-widget=\"chat-pane-toggle\"]'\n    },\n    //Define the set of colors to use globally around the website\n    colors: {\n        lightBlue: \"#3c8dbc\",\n        red: \"#f56954\",\n        green: \"#00a65a\",\n        aqua: \"#00c0ef\",\n        yellow: \"#f39c12\",\n        blue: \"#0073b7\",\n        navy: \"#001F3F\",\n        teal: \"#39CCCC\",\n        olive: \"#3D9970\",\n        lime: \"#01FF70\",\n        orange: \"#FF851B\",\n        fuchsia: \"#F012BE\",\n        purple: \"#8E24AA\",\n        maroon: \"#D81B60\",\n        black: \"#222222\",\n        gray: \"#d2d6de\"\n    },\n    //The standard screen sizes that bootstrap uses.\n    //If you change these in the variables.less file, change\n    //them here too.\n    screenSizes: {\n        xs: 480,\n        sm: 768,\n        md: 992,\n        lg: 1200\n    }\n};\n\n/* ------------------\r\n * - Implementation -\r\n * ------------------\r\n * The next block of code implements AdminLTE's\r\n * functions and plugins as specified by the\r\n * options above.\r\n */\n$(function () {\n    \"use strict\";\n\n    //Fix for IE page transitions\n\n    $(\"body\").removeClass(\"hold-transition\");\n\n    //Extend options if external options exist\n    if (typeof AdminLTEOptions !== \"undefined\") {\n        $.extend(true, $.AdminLTE.options, AdminLTEOptions);\n    }\n\n    //Easy access to options\n    var o = $.AdminLTE.options;\n\n    //Set up the object\n    _init();\n\n    //Activate the layout maker\n    $.AdminLTE.layout.activate();\n\n    //Enable sidebar tree view controls\n    $.AdminLTE.tree('.sidebar');\n\n    //Enable control sidebar\n    if (o.enableControlSidebar) {\n        $.AdminLTE.controlSidebar.activate();\n    }\n\n    //Add slimscroll to navbar dropdown\n    if (o.navbarMenuSlimscroll && typeof $.fn.slimscroll != 'undefined') {\n        $(\".navbar .menu\").slimscroll({\n            height: o.navbarMenuHeight,\n            alwaysVisible: false,\n            size: o.navbarMenuSlimscrollWidth\n        }).css(\"width\", \"100%\");\n    }\n\n    //Activate sidebar push menu\n    if (o.sidebarPushMenu) {\n        $.AdminLTE.pushMenu.activate(o.sidebarToggleSelector);\n    }\n\n    //Activate Bootstrap tooltip\n    if (o.enableBSToppltip) {\n        $('body').tooltip({\n            selector: o.BSTooltipSelector\n        });\n    }\n\n    //Activate box widget\n    if (o.enableBoxWidget) {\n        $.AdminLTE.boxWidget.activate();\n    }\n\n    //Activate fast click\n    if (o.enableFastclick && typeof FastClick != 'undefined') {\n        FastClick.attach(document.body);\n    }\n\n    //Activate direct chat widget\n    if (o.directChat.enable) {\n        $(document).on('click', o.directChat.contactToggleSelector, function () {\n            var box = $(this).parents('.direct-chat').first();\n            box.toggleClass('direct-chat-contacts-open');\n        });\n    }\n\n    /*\r\n     * INITIALIZE BUTTON TOGGLE\r\n     * ------------------------\r\n     */\n    $('.btn-group[data-toggle=\"btn-toggle\"]').each(function () {\n        var group = $(this);\n        $(this).find(\".btn\").on('click', function (e) {\n            group.find(\".btn.active\").removeClass(\"active\");\n            $(this).addClass(\"active\");\n            e.preventDefault();\n        });\n    });\n});\n\n/* ----------------------------------\r\n * - Initialize the AdminLTE Object -\r\n * ----------------------------------\r\n * All AdminLTE functions are implemented below.\r\n */\nfunction _init() {\n    'use strict';\n    /* Layout\r\n     * ======\r\n     * Fixes the layout height in case min-height fails.\r\n     *\r\n     * @type Object\r\n     * @usage $.AdminLTE.layout.activate()\r\n     *        $.AdminLTE.layout.fix()\r\n     *        $.AdminLTE.layout.fixSidebar()\r\n     */\n\n    $.AdminLTE.layout = {\n        activate: function activate() {\n            var _this = this;\n            _this.fix();\n            _this.fixSidebar();\n            $(window, \".wrapper\").resize(function () {\n                _this.fix();\n                _this.fixSidebar();\n            });\n        },\n        fix: function fix() {\n            //Get window height and the wrapper height\n            var neg = $('.main-header').outerHeight() + $('.main-footer').outerHeight();\n            var window_height = $(window).height();\n            var sidebar_height = $(\".sidebar\").height();\n            //Set the min-height of the content and sidebar based on the\n            //the height of the document.\n            if ($(\"body\").hasClass(\"fixed\")) {\n                $(\".content-wrapper, .right-side\").css('min-height', window_height - $('.main-footer').outerHeight());\n            } else {\n                var postSetWidth;\n                if (window_height >= sidebar_height) {\n                    $(\".content-wrapper, .right-side\").css('min-height', window_height - neg);\n                    postSetWidth = window_height - neg;\n                } else {\n                    $(\".content-wrapper, .right-side\").css('min-height', sidebar_height);\n                    postSetWidth = sidebar_height;\n                }\n\n                //Fix for the control sidebar height\n                var controlSidebar = $($.AdminLTE.options.controlSidebarOptions.selector);\n                if (typeof controlSidebar !== \"undefined\") {\n                    if (controlSidebar.height() > postSetWidth) $(\".content-wrapper, .right-side\").css('min-height', controlSidebar.height());\n                }\n            }\n        },\n        fixSidebar: function fixSidebar() {\n            //Make sure the body tag has the .fixed class\n            if (!$(\"body\").hasClass(\"fixed\")) {\n                if (typeof $.fn.slimScroll != 'undefined') {\n                    $(\".sidebar\").slimScroll({ destroy: true }).height(\"auto\");\n                }\n                return;\n            } else if (typeof $.fn.slimScroll == 'undefined' && window.console) {\n                window.console.error(\"Error: the fixed layout requires the slimscroll plugin!\");\n            }\n            //Enable slimscroll for fixed layout\n            if ($.AdminLTE.options.sidebarSlimScroll) {\n                if (typeof $.fn.slimScroll != 'undefined') {\n                    //Destroy if it exists\n                    $(\".sidebar\").slimScroll({ destroy: true }).height(\"auto\");\n                    //Add slimscroll\n                    $(\".sidebar\").slimscroll({\n                        height: $(window).height() - $(\".main-header\").height() + \"px\",\n                        color: \"rgba(0,0,0,0.2)\",\n                        size: \"3px\"\n                    });\n                }\n            }\n        }\n    };\n\n    /* PushMenu()\r\n     * ==========\r\n     * Adds the push menu functionality to the sidebar.\r\n     *\r\n     * @type Function\r\n     * @usage: $.AdminLTE.pushMenu(\"[data-toggle='offcanvas']\")\r\n     */\n    $.AdminLTE.pushMenu = {\n        activate: function activate(toggleBtn) {\n            //Get the screen sizes\n            var screenSizes = $.AdminLTE.options.screenSizes;\n\n            //Enable sidebar toggle\n            $(document).on('click', toggleBtn, function (e) {\n                e.preventDefault();\n\n                //Enable sidebar push menu\n                if ($(window).width() > screenSizes.sm - 1) {\n                    if ($(\"body\").hasClass('sidebar-collapse')) {\n                        $(\"body\").removeClass('sidebar-collapse').trigger('expanded.pushMenu');\n                    } else {\n                        $(\"body\").addClass('sidebar-collapse').trigger('collapsed.pushMenu');\n                    }\n                }\n                //Handle sidebar push menu for small screens\n                else {\n                        if ($(\"body\").hasClass('sidebar-open')) {\n                            $(\"body\").removeClass('sidebar-open').removeClass('sidebar-collapse').trigger('collapsed.pushMenu');\n                        } else {\n                            $(\"body\").addClass('sidebar-open').trigger('expanded.pushMenu');\n                        }\n                    }\n            });\n\n            $(\".content-wrapper\").click(function () {\n                //Enable hide menu when clicking on the content-wrapper on small screens\n                if ($(window).width() <= screenSizes.sm - 1 && $(\"body\").hasClass(\"sidebar-open\")) {\n                    $(\"body\").removeClass('sidebar-open');\n                }\n            });\n\n            //Enable expand on hover for sidebar mini\n            if ($.AdminLTE.options.sidebarExpandOnHover || $('body').hasClass('fixed') && $('body').hasClass('sidebar-mini')) {\n                this.expandOnHover();\n            }\n        },\n        expandOnHover: function expandOnHover() {\n            var _this = this;\n            var screenWidth = $.AdminLTE.options.screenSizes.sm - 1;\n            //Expand sidebar on hover\n            $('.main-sidebar').hover(function () {\n                if ($('body').hasClass('sidebar-mini') && $(\"body\").hasClass('sidebar-collapse') && $(window).width() > screenWidth) {\n                    _this.expand();\n                }\n            }, function () {\n                if ($('body').hasClass('sidebar-mini') && $('body').hasClass('sidebar-expanded-on-hover') && $(window).width() > screenWidth) {\n                    _this.collapse();\n                }\n            });\n        },\n        expand: function expand() {\n            $(\"body\").removeClass('sidebar-collapse').addClass('sidebar-expanded-on-hover');\n        },\n        collapse: function collapse() {\n            if ($('body').hasClass('sidebar-expanded-on-hover')) {\n                $('body').removeClass('sidebar-expanded-on-hover').addClass('sidebar-collapse');\n            }\n        }\n    };\n\n    /* Tree()\r\n     * ======\r\n     * Converts the sidebar into a multilevel\r\n     * tree view menu.\r\n     *\r\n     * @type Function\r\n     * @Usage: $.AdminLTE.tree('.sidebar')\r\n     */\n    $.AdminLTE.tree = function (menu) {\n        var _this = this;\n        var animationSpeed = $.AdminLTE.options.animationSpeed;\n        $(document).off('click', menu + ' li a').on('click', menu + ' li a', function (e) {\n            //Get the clicked link and the next element\n            var $this = $(this);\n            var checkElement = $this.next();\n\n            //Check if the next element is a menu and is visible\n            if (checkElement.is('.treeview-menu') && checkElement.is(':visible') && !$('body').hasClass('sidebar-collapse')) {\n                //Close the menu\n                checkElement.slideUp(animationSpeed, function () {\n                    checkElement.removeClass('menu-open');\n                    //Fix the layout in case the sidebar stretches over the height of the window\n                    //_this.layout.fix();\n                });\n                checkElement.parent(\"li\").removeClass(\"active\");\n            }\n            //If the menu is not visible\n            else if (checkElement.is('.treeview-menu') && !checkElement.is(':visible')) {\n                    //Get the parent menu\n                    var parent = $this.parents('ul').first();\n                    //Close all open menus within the parent\n                    var ul = parent.find('ul:visible').slideUp(animationSpeed);\n                    //Remove the menu-open class from the parent\n                    ul.removeClass('menu-open');\n                    //Get the parent li\n                    var parent_li = $this.parent(\"li\");\n\n                    //Open the target menu and add the menu-open class\n                    checkElement.slideDown(animationSpeed, function () {\n                        //Add the class active to the parent li\n                        checkElement.addClass('menu-open');\n                        parent.find('li.active').removeClass('active');\n                        parent_li.addClass('active');\n                        //Fix the layout in case the sidebar stretches over the height of the window\n                        _this.layout.fix();\n                    });\n                }\n            //if this isn't a link, prevent the page from being redirected\n            if (checkElement.is('.treeview-menu')) {\n                e.preventDefault();\n            }\n        });\n    };\n\n    /* ControlSidebar\r\n     * ==============\r\n     * Adds functionality to the right sidebar\r\n     *\r\n     * @type Object\r\n     * @usage $.AdminLTE.controlSidebar.activate(options)\r\n     */\n    $.AdminLTE.controlSidebar = {\n        //instantiate the object\n        activate: function activate() {\n            //Get the object\n            var _this = this;\n            //Update options\n            var o = $.AdminLTE.options.controlSidebarOptions;\n            //Get the sidebar\n            var sidebar = $(o.selector);\n            //The toggle button\n            var btn = $(o.toggleBtnSelector);\n\n            //Listen to the click event\n            btn.on('click', function (e) {\n                e.preventDefault();\n                //If the sidebar is not open\n                if (!sidebar.hasClass('control-sidebar-open') && !$('body').hasClass('control-sidebar-open')) {\n                    //Open the sidebar\n                    _this.open(sidebar, o.slide);\n                } else {\n                    _this.close(sidebar, o.slide);\n                }\n            });\n\n            //If the body has a boxed layout, fix the sidebar bg position\n            var bg = $(\".control-sidebar-bg\");\n            _this._fix(bg);\n\n            //If the body has a fixed layout, make the control sidebar fixed\n            if ($('body').hasClass('fixed')) {\n                _this._fixForFixed(sidebar);\n            } else {\n                //If the content height is less than the sidebar's height, force max height\n                if ($('.content-wrapper, .right-side').height() < sidebar.height()) {\n                    _this._fixForContent(sidebar);\n                }\n            }\n        },\n        //Open the control sidebar\n        open: function open(sidebar, slide) {\n            //Slide over content\n            if (slide) {\n                sidebar.addClass('control-sidebar-open');\n            } else {\n                //Push the content by adding the open class to the body instead\n                //of the sidebar itself\n                $('body').addClass('control-sidebar-open');\n            }\n        },\n        //Close the control sidebar\n        close: function close(sidebar, slide) {\n            if (slide) {\n                sidebar.removeClass('control-sidebar-open');\n            } else {\n                $('body').removeClass('control-sidebar-open');\n            }\n        },\n        _fix: function _fix(sidebar) {\n            var _this = this;\n            if ($(\"body\").hasClass('layout-boxed')) {\n                sidebar.css('position', 'absolute');\n                sidebar.height($(\".wrapper\").height());\n                if (_this.hasBindedResize) {\n                    return;\n                }\n                $(window).resize(function () {\n                    _this._fix(sidebar);\n                });\n                _this.hasBindedResize = true;\n            } else {\n                sidebar.css({\n                    'position': 'fixed',\n                    'height': 'auto'\n                });\n            }\n        },\n        _fixForFixed: function _fixForFixed(sidebar) {\n            sidebar.css({\n                'position': 'fixed',\n                'max-height': '100%',\n                'overflow': 'auto',\n                'padding-bottom': '50px'\n            });\n        },\n        _fixForContent: function _fixForContent(sidebar) {\n            $(\".content-wrapper, .right-side\").css('min-height', sidebar.height());\n        }\n    };\n\n    /* BoxWidget\r\n     * =========\r\n     * BoxWidget is a plugin to handle collapsing and\r\n     * removing boxes from the screen.\r\n     *\r\n     * @type Object\r\n     * @usage $.AdminLTE.boxWidget.activate()\r\n     *        Set all your options in the main $.AdminLTE.options object\r\n     */\n    $.AdminLTE.boxWidget = {\n        selectors: $.AdminLTE.options.boxWidgetOptions.boxWidgetSelectors,\n        icons: $.AdminLTE.options.boxWidgetOptions.boxWidgetIcons,\n        animationSpeed: $.AdminLTE.options.animationSpeed,\n        activate: function activate(_box) {\n            var _this = this;\n            if (!_box) {\n                _box = document; // activate all boxes per default\n            }\n            //Listen for collapse event triggers\n            $(_box).on('click', _this.selectors.collapse, function (e) {\n                e.preventDefault();\n                _this.collapse($(this));\n            });\n\n            //Listen for remove event triggers\n            $(_box).on('click', _this.selectors.remove, function (e) {\n                e.preventDefault();\n                _this.remove($(this));\n            });\n        },\n        collapse: function collapse(element) {\n            var _this = this;\n            //Find the box parent\n            var box = element.parents(\".box\").first();\n            //Find the body and the footer\n            var box_content = box.find(\"> .box-body, > .box-footer, > form  >.box-body, > form > .box-footer\");\n            if (!box.hasClass(\"collapsed-box\")) {\n                //Convert minus into plus\n                element.children(\":first\").removeClass(_this.icons.collapse).addClass(_this.icons.open);\n                //Hide the content\n                box_content.slideUp(_this.animationSpeed, function () {\n                    box.addClass(\"collapsed-box\");\n                });\n            } else {\n                //Convert plus into minus\n                element.children(\":first\").removeClass(_this.icons.open).addClass(_this.icons.collapse);\n                //Show the content\n                box_content.slideDown(_this.animationSpeed, function () {\n                    box.removeClass(\"collapsed-box\");\n                });\n            }\n        },\n        remove: function remove(element) {\n            //Find the box parent\n            var box = element.parents(\".box\").first();\n            box.slideUp(this.animationSpeed);\n        }\n    };\n}\n\n/* ------------------\r\n * - Custom Plugins -\r\n * ------------------\r\n * All custom plugins are defined below.\r\n */\n\n/*\r\n * BOX REFRESH BUTTON\r\n * ------------------\r\n * This is a custom plugin to use with the component BOX. It allows you to add\r\n * a refresh button to the box. It converts the box's state to a loading state.\r\n *\r\n * @type plugin\r\n * @usage $(\"#box-widget\").boxRefresh( options );\r\n */\n(function ($) {\n\n    \"use strict\";\n\n    $.fn.boxRefresh = function (options) {\n\n        // Render options\n        var settings = $.extend({\n            //Refresh button selector\n            trigger: \".refresh-btn\",\n            //File source to be loaded (e.g: ajax/src.php)\n            source: \"\",\n            //Callbacks\n            onLoadStart: function onLoadStart(box) {\n                return box;\n            }, //Right after the button has been clicked\n            onLoadDone: function onLoadDone(box) {\n                return box;\n            } //When the source has been loaded\n\n        }, options);\n\n        //The overlay\n        var overlay = $('<div class=\"overlay\"><div class=\"fa fa-refresh fa-spin\"></div></div>');\n\n        return this.each(function () {\n            //if a source is specified\n            if (settings.source === \"\") {\n                if (window.console) {\n                    window.console.log(\"Please specify a source first - boxRefresh()\");\n                }\n                return;\n            }\n            //the box\n            var box = $(this);\n            //the button\n            var rBtn = box.find(settings.trigger).first();\n\n            //On trigger click\n            rBtn.on('click', function (e) {\n                e.preventDefault();\n                //Add loading overlay\n                start(box);\n\n                //Perform ajax call\n                box.find(\".box-body\").load(settings.source, function () {\n                    done(box);\n                });\n            });\n        });\n\n        function start(box) {\n            //Add overlay and loading img\n            box.append(overlay);\n\n            settings.onLoadStart.call(box);\n        }\n\n        function done(box) {\n            //Remove overlay and loading img\n            box.find(overlay).remove();\n\n            settings.onLoadDone.call(box);\n        }\n    };\n})(jQuery);\n\n/*\r\n * EXPLICIT BOX CONTROLS\r\n * -----------------------\r\n * This is a custom plugin to use with the component BOX. It allows you to activate\r\n * a box inserted in the DOM after the app.js was loaded, toggle and remove box.\r\n *\r\n * @type plugin\r\n * @usage $(\"#box-widget\").activateBox();\r\n * @usage $(\"#box-widget\").toggleBox();\r\n * @usage $(\"#box-widget\").removeBox();\r\n */\n(function ($) {\n\n    'use strict';\n\n    $.fn.activateBox = function () {\n        $.AdminLTE.boxWidget.activate(this);\n    };\n\n    $.fn.toggleBox = function () {\n        var button = $($.AdminLTE.boxWidget.selectors.collapse, this);\n        $.AdminLTE.boxWidget.collapse(button);\n    };\n\n    $.fn.removeBox = function () {\n        var button = $($.AdminLTE.boxWidget.selectors.remove, this);\n        $.AdminLTE.boxWidget.remove(button);\n    };\n})(jQuery);\n\n/*\r\n * TODO LIST CUSTOM PLUGIN\r\n * -----------------------\r\n * This plugin depends on iCheck plugin for checkbox and radio inputs\r\n *\r\n * @type plugin\r\n * @usage $(\"#todo-widget\").todolist( options );\r\n */\n(function ($) {\n\n    'use strict';\n\n    $.fn.todolist = function (options) {\n        // Render options\n        var settings = $.extend({\n            //When the user checks the input\n            onCheck: function onCheck(ele) {\n                return ele;\n            },\n            //When the user unchecks the input\n            onUncheck: function onUncheck(ele) {\n                return ele;\n            }\n        }, options);\n\n        return this.each(function () {\n\n            if (typeof $.fn.iCheck != 'undefined') {\n                $('input', this).on('ifChecked', function () {\n                    var ele = $(this).parents(\"li\").first();\n                    ele.toggleClass(\"done\");\n                    settings.onCheck.call(ele);\n                });\n\n                $('input', this).on('ifUnchecked', function () {\n                    var ele = $(this).parents(\"li\").first();\n                    ele.toggleClass(\"done\");\n                    settings.onUncheck.call(ele);\n                });\n            } else {\n                $('input', this).on('change', function () {\n                    var ele = $(this).parents(\"li\").first();\n                    ele.toggleClass(\"done\");\n                    if ($('input', ele).is(\":checked\")) {\n                        settings.onCheck.call(ele);\n                    } else {\n                        settings.onUncheck.call(ele);\n                    }\n                });\n            }\n        });\n    };\n})(jQuery);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9yZXNvdXJjZXMvYXNzZXRzL2pzL2FwcC5qcz84YjY3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4vKiEgQWRtaW5MVEUgYXBwLmpzXHJcbiAqID09PT09PT09PT09PT09PT1cclxuICogTWFpbiBKUyBhcHBsaWNhdGlvbiBmaWxlIGZvciBBZG1pbkxURSB2Mi4gVGhpcyBmaWxlXHJcbiAqIHNob3VsZCBiZSBpbmNsdWRlZCBpbiBhbGwgcGFnZXMuIEl0IGNvbnRyb2xzIHNvbWUgbGF5b3V0XHJcbiAqIG9wdGlvbnMgYW5kIGltcGxlbWVudHMgZXhjbHVzaXZlIEFkbWluTFRFIHBsdWdpbnMuXHJcbiAqXHJcbiAqIEBBdXRob3IgIEFsbXNhZWVkIFN0dWRpb1xyXG4gKiBAU3VwcG9ydCA8aHR0cDovL3d3dy5hbG1zYWVlZHN0dWRpby5jb20+XHJcbiAqIEBFbWFpbCAgIDxhYmR1bGxhaEBhbG1zYWVlZHN0dWRpby5jb20+XHJcbiAqIEB2ZXJzaW9uIDIuMy42XHJcbiAqIEBsaWNlbnNlIE1JVCA8aHR0cDovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL01JVD5cclxuICovXG5cbi8vTWFrZSBzdXJlIGpRdWVyeSBoYXMgYmVlbiBsb2FkZWQgYmVmb3JlIGFwcC5qc1xuaWYgKHR5cGVvZiBqUXVlcnkgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJBZG1pbkxURSByZXF1aXJlcyBqUXVlcnlcIik7XG59XG5cbi8qIEFkbWluTFRFXHJcbiAqXHJcbiAqIEB0eXBlIE9iamVjdFxyXG4gKiBAZGVzY3JpcHRpb24gJC5BZG1pbkxURSBpcyB0aGUgbWFpbiBvYmplY3QgZm9yIHRoZSB0ZW1wbGF0ZSdzIGFwcC5cclxuICogICAgICAgICAgICAgIEl0J3MgdXNlZCBmb3IgaW1wbGVtZW50aW5nIGZ1bmN0aW9ucyBhbmQgb3B0aW9ucyByZWxhdGVkXHJcbiAqICAgICAgICAgICAgICB0byB0aGUgdGVtcGxhdGUuIEtlZXBpbmcgZXZlcnl0aGluZyB3cmFwcGVkIGluIGFuIG9iamVjdFxyXG4gKiAgICAgICAgICAgICAgcHJldmVudHMgY29uZmxpY3Qgd2l0aCBvdGhlciBwbHVnaW5zIGFuZCBpcyBhIGJldHRlclxyXG4gKiAgICAgICAgICAgICAgd2F5IHRvIG9yZ2FuaXplIG91ciBjb2RlLlxyXG4gKi9cbiQuQWRtaW5MVEUgPSB7fTtcblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogLSBBZG1pbkxURSBPcHRpb25zIC1cclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogTW9kaWZ5IHRoZXNlIG9wdGlvbnMgdG8gc3VpdCB5b3VyIGltcGxlbWVudGF0aW9uXHJcbiAqL1xuJC5BZG1pbkxURS5vcHRpb25zID0ge1xuICAgIC8vQWRkIHNsaW1zY3JvbGwgdG8gbmF2YmFyIG1lbnVzXG4gICAgLy9UaGlzIHJlcXVpcmVzIHlvdSB0byBsb2FkIHRoZSBzbGltc2Nyb2xsIHBsdWdpblxuICAgIC8vaW4gZXZlcnkgcGFnZSBiZWZvcmUgYXBwLmpzXG4gICAgbmF2YmFyTWVudVNsaW1zY3JvbGw6IHRydWUsXG4gICAgbmF2YmFyTWVudVNsaW1zY3JvbGxXaWR0aDogXCIzcHhcIiwgLy9UaGUgd2lkdGggb2YgdGhlIHNjcm9sbCBiYXJcbiAgICBuYXZiYXJNZW51SGVpZ2h0OiBcIjIwMHB4XCIsIC8vVGhlIGhlaWdodCBvZiB0aGUgaW5uZXIgbWVudVxuICAgIC8vR2VuZXJhbCBhbmltYXRpb24gc3BlZWQgZm9yIEpTIGFuaW1hdGVkIGVsZW1lbnRzIHN1Y2ggYXMgYm94IGNvbGxhcHNlL2V4cGFuZCBhbmRcbiAgICAvL3NpZGViYXIgdHJlZXZpZXcgc2xpZGUgdXAvZG93bi4gVGhpcyBvcHRpb25zIGFjY2VwdHMgYW4gaW50ZWdlciBhcyBtaWxsaXNlY29uZHMsXG4gICAgLy8nZmFzdCcsICdub3JtYWwnLCBvciAnc2xvdydcbiAgICBhbmltYXRpb25TcGVlZDogNTAwLFxuICAgIC8vU2lkZWJhciBwdXNoIG1lbnUgdG9nZ2xlIGJ1dHRvbiBzZWxlY3RvclxuICAgIHNpZGViYXJUb2dnbGVTZWxlY3RvcjogXCJbZGF0YS10b2dnbGU9J29mZmNhbnZhcyddXCIsXG4gICAgLy9BY3RpdmF0ZSBzaWRlYmFyIHB1c2ggbWVudVxuICAgIHNpZGViYXJQdXNoTWVudTogdHJ1ZSxcbiAgICAvL0FjdGl2YXRlIHNpZGViYXIgc2xpbXNjcm9sbCBpZiB0aGUgZml4ZWQgbGF5b3V0IGlzIHNldCAocmVxdWlyZXMgU2xpbVNjcm9sbCBQbHVnaW4pXG4gICAgc2lkZWJhclNsaW1TY3JvbGw6IHRydWUsXG4gICAgLy9FbmFibGUgc2lkZWJhciBleHBhbmQgb24gaG92ZXIgZWZmZWN0IGZvciBzaWRlYmFyIG1pbmlcbiAgICAvL1RoaXMgb3B0aW9uIGlzIGZvcmNlZCB0byB0cnVlIGlmIGJvdGggdGhlIGZpeGVkIGxheW91dCBhbmQgc2lkZWJhciBtaW5pXG4gICAgLy9hcmUgdXNlZCB0b2dldGhlclxuICAgIHNpZGViYXJFeHBhbmRPbkhvdmVyOiBmYWxzZSxcbiAgICAvL0JveFJlZnJlc2ggUGx1Z2luXG4gICAgZW5hYmxlQm94UmVmcmVzaDogdHJ1ZSxcbiAgICAvL0Jvb3RzdHJhcC5qcyB0b29sdGlwXG4gICAgZW5hYmxlQlNUb3BwbHRpcDogdHJ1ZSxcbiAgICBCU1Rvb2x0aXBTZWxlY3RvcjogXCJbZGF0YS10b2dnbGU9J3Rvb2x0aXAnXVwiLFxuICAgIC8vRW5hYmxlIEZhc3QgQ2xpY2suIEZhc3RjbGljay5qcyBjcmVhdGVzIGEgbW9yZVxuICAgIC8vbmF0aXZlIHRvdWNoIGV4cGVyaWVuY2Ugd2l0aCB0b3VjaCBkZXZpY2VzLiBJZiB5b3VcbiAgICAvL2Nob29zZSB0byBlbmFibGUgdGhlIHBsdWdpbiwgbWFrZSBzdXJlIHlvdSBsb2FkIHRoZSBzY3JpcHRcbiAgICAvL2JlZm9yZSBBZG1pbkxURSdzIGFwcC5qc1xuICAgIGVuYWJsZUZhc3RjbGljazogZmFsc2UsXG4gICAgLy9Db250cm9sIFNpZGViYXIgT3B0aW9uc1xuICAgIGVuYWJsZUNvbnRyb2xTaWRlYmFyOiB0cnVlLFxuICAgIGNvbnRyb2xTaWRlYmFyT3B0aW9uczoge1xuICAgICAgICAvL1doaWNoIGJ1dHRvbiBzaG91bGQgdHJpZ2dlciB0aGUgb3Blbi9jbG9zZSBldmVudFxuICAgICAgICB0b2dnbGVCdG5TZWxlY3RvcjogXCJbZGF0YS10b2dnbGU9J2NvbnRyb2wtc2lkZWJhciddXCIsXG4gICAgICAgIC8vVGhlIHNpZGViYXIgc2VsZWN0b3JcbiAgICAgICAgc2VsZWN0b3I6IFwiLmNvbnRyb2wtc2lkZWJhclwiLFxuICAgICAgICAvL0VuYWJsZSBzbGlkZSBvdmVyIGNvbnRlbnRcbiAgICAgICAgc2xpZGU6IHRydWVcbiAgICB9LFxuICAgIC8vQm94IFdpZGdldCBQbHVnaW4uIEVuYWJsZSB0aGlzIHBsdWdpblxuICAgIC8vdG8gYWxsb3cgYm94ZXMgdG8gYmUgY29sbGFwc2VkIGFuZC9vciByZW1vdmVkXG4gICAgZW5hYmxlQm94V2lkZ2V0OiB0cnVlLFxuICAgIC8vQm94IFdpZGdldCBwbHVnaW4gb3B0aW9uc1xuICAgIGJveFdpZGdldE9wdGlvbnM6IHtcbiAgICAgICAgYm94V2lkZ2V0SWNvbnM6IHtcbiAgICAgICAgICAgIC8vQ29sbGFwc2UgaWNvblxuICAgICAgICAgICAgY29sbGFwc2U6ICdmYS1taW51cycsXG4gICAgICAgICAgICAvL09wZW4gaWNvblxuICAgICAgICAgICAgb3BlbjogJ2ZhLXBsdXMnLFxuICAgICAgICAgICAgLy9SZW1vdmUgaWNvblxuICAgICAgICAgICAgcmVtb3ZlOiAnZmEtdGltZXMnXG4gICAgICAgIH0sXG4gICAgICAgIGJveFdpZGdldFNlbGVjdG9yczoge1xuICAgICAgICAgICAgLy9SZW1vdmUgYnV0dG9uIHNlbGVjdG9yXG4gICAgICAgICAgICByZW1vdmU6ICdbZGF0YS13aWRnZXQ9XCJyZW1vdmVcIl0nLFxuICAgICAgICAgICAgLy9Db2xsYXBzZSBidXR0b24gc2VsZWN0b3JcbiAgICAgICAgICAgIGNvbGxhcHNlOiAnW2RhdGEtd2lkZ2V0PVwiY29sbGFwc2VcIl0nXG4gICAgICAgIH1cbiAgICB9LFxuICAgIC8vRGlyZWN0IENoYXQgcGx1Z2luIG9wdGlvbnNcbiAgICBkaXJlY3RDaGF0OiB7XG4gICAgICAgIC8vRW5hYmxlIGRpcmVjdCBjaGF0IGJ5IGRlZmF1bHRcbiAgICAgICAgZW5hYmxlOiB0cnVlLFxuICAgICAgICAvL1RoZSBidXR0b24gdG8gb3BlbiBhbmQgY2xvc2UgdGhlIGNoYXQgY29udGFjdHMgcGFuZVxuICAgICAgICBjb250YWN0VG9nZ2xlU2VsZWN0b3I6ICdbZGF0YS13aWRnZXQ9XCJjaGF0LXBhbmUtdG9nZ2xlXCJdJ1xuICAgIH0sXG4gICAgLy9EZWZpbmUgdGhlIHNldCBvZiBjb2xvcnMgdG8gdXNlIGdsb2JhbGx5IGFyb3VuZCB0aGUgd2Vic2l0ZVxuICAgIGNvbG9yczoge1xuICAgICAgICBsaWdodEJsdWU6IFwiIzNjOGRiY1wiLFxuICAgICAgICByZWQ6IFwiI2Y1Njk1NFwiLFxuICAgICAgICBncmVlbjogXCIjMDBhNjVhXCIsXG4gICAgICAgIGFxdWE6IFwiIzAwYzBlZlwiLFxuICAgICAgICB5ZWxsb3c6IFwiI2YzOWMxMlwiLFxuICAgICAgICBibHVlOiBcIiMwMDczYjdcIixcbiAgICAgICAgbmF2eTogXCIjMDAxRjNGXCIsXG4gICAgICAgIHRlYWw6IFwiIzM5Q0NDQ1wiLFxuICAgICAgICBvbGl2ZTogXCIjM0Q5OTcwXCIsXG4gICAgICAgIGxpbWU6IFwiIzAxRkY3MFwiLFxuICAgICAgICBvcmFuZ2U6IFwiI0ZGODUxQlwiLFxuICAgICAgICBmdWNoc2lhOiBcIiNGMDEyQkVcIixcbiAgICAgICAgcHVycGxlOiBcIiM4RTI0QUFcIixcbiAgICAgICAgbWFyb29uOiBcIiNEODFCNjBcIixcbiAgICAgICAgYmxhY2s6IFwiIzIyMjIyMlwiLFxuICAgICAgICBncmF5OiBcIiNkMmQ2ZGVcIlxuICAgIH0sXG4gICAgLy9UaGUgc3RhbmRhcmQgc2NyZWVuIHNpemVzIHRoYXQgYm9vdHN0cmFwIHVzZXMuXG4gICAgLy9JZiB5b3UgY2hhbmdlIHRoZXNlIGluIHRoZSB2YXJpYWJsZXMubGVzcyBmaWxlLCBjaGFuZ2VcbiAgICAvL3RoZW0gaGVyZSB0b28uXG4gICAgc2NyZWVuU2l6ZXM6IHtcbiAgICAgICAgeHM6IDQ4MCxcbiAgICAgICAgc206IDc2OCxcbiAgICAgICAgbWQ6IDk5MixcbiAgICAgICAgbGc6IDEyMDBcbiAgICB9XG59O1xuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS1cclxuICogLSBJbXBsZW1lbnRhdGlvbiAtXHJcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiBUaGUgbmV4dCBibG9jayBvZiBjb2RlIGltcGxlbWVudHMgQWRtaW5MVEUnc1xyXG4gKiBmdW5jdGlvbnMgYW5kIHBsdWdpbnMgYXMgc3BlY2lmaWVkIGJ5IHRoZVxyXG4gKiBvcHRpb25zIGFib3ZlLlxyXG4gKi9cbiQoZnVuY3Rpb24gKCkge1xuICAgIFwidXNlIHN0cmljdFwiO1xuXG4gICAgLy9GaXggZm9yIElFIHBhZ2UgdHJhbnNpdGlvbnNcblxuICAgICQoXCJib2R5XCIpLnJlbW92ZUNsYXNzKFwiaG9sZC10cmFuc2l0aW9uXCIpO1xuXG4gICAgLy9FeHRlbmQgb3B0aW9ucyBpZiBleHRlcm5hbCBvcHRpb25zIGV4aXN0XG4gICAgaWYgKHR5cGVvZiBBZG1pbkxURU9wdGlvbnMgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgJC5leHRlbmQodHJ1ZSwgJC5BZG1pbkxURS5vcHRpb25zLCBBZG1pbkxURU9wdGlvbnMpO1xuICAgIH1cblxuICAgIC8vRWFzeSBhY2Nlc3MgdG8gb3B0aW9uc1xuICAgIHZhciBvID0gJC5BZG1pbkxURS5vcHRpb25zO1xuXG4gICAgLy9TZXQgdXAgdGhlIG9iamVjdFxuICAgIF9pbml0KCk7XG5cbiAgICAvL0FjdGl2YXRlIHRoZSBsYXlvdXQgbWFrZXJcbiAgICAkLkFkbWluTFRFLmxheW91dC5hY3RpdmF0ZSgpO1xuXG4gICAgLy9FbmFibGUgc2lkZWJhciB0cmVlIHZpZXcgY29udHJvbHNcbiAgICAkLkFkbWluTFRFLnRyZWUoJy5zaWRlYmFyJyk7XG5cbiAgICAvL0VuYWJsZSBjb250cm9sIHNpZGViYXJcbiAgICBpZiAoby5lbmFibGVDb250cm9sU2lkZWJhcikge1xuICAgICAgICAkLkFkbWluTFRFLmNvbnRyb2xTaWRlYmFyLmFjdGl2YXRlKCk7XG4gICAgfVxuXG4gICAgLy9BZGQgc2xpbXNjcm9sbCB0byBuYXZiYXIgZHJvcGRvd25cbiAgICBpZiAoby5uYXZiYXJNZW51U2xpbXNjcm9sbCAmJiB0eXBlb2YgJC5mbi5zbGltc2Nyb2xsICE9ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICQoXCIubmF2YmFyIC5tZW51XCIpLnNsaW1zY3JvbGwoe1xuICAgICAgICAgICAgaGVpZ2h0OiBvLm5hdmJhck1lbnVIZWlnaHQsXG4gICAgICAgICAgICBhbHdheXNWaXNpYmxlOiBmYWxzZSxcbiAgICAgICAgICAgIHNpemU6IG8ubmF2YmFyTWVudVNsaW1zY3JvbGxXaWR0aFxuICAgICAgICB9KS5jc3MoXCJ3aWR0aFwiLCBcIjEwMCVcIik7XG4gICAgfVxuXG4gICAgLy9BY3RpdmF0ZSBzaWRlYmFyIHB1c2ggbWVudVxuICAgIGlmIChvLnNpZGViYXJQdXNoTWVudSkge1xuICAgICAgICAkLkFkbWluTFRFLnB1c2hNZW51LmFjdGl2YXRlKG8uc2lkZWJhclRvZ2dsZVNlbGVjdG9yKTtcbiAgICB9XG5cbiAgICAvL0FjdGl2YXRlIEJvb3RzdHJhcCB0b29sdGlwXG4gICAgaWYgKG8uZW5hYmxlQlNUb3BwbHRpcCkge1xuICAgICAgICAkKCdib2R5JykudG9vbHRpcCh7XG4gICAgICAgICAgICBzZWxlY3Rvcjogby5CU1Rvb2x0aXBTZWxlY3RvclxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvL0FjdGl2YXRlIGJveCB3aWRnZXRcbiAgICBpZiAoby5lbmFibGVCb3hXaWRnZXQpIHtcbiAgICAgICAgJC5BZG1pbkxURS5ib3hXaWRnZXQuYWN0aXZhdGUoKTtcbiAgICB9XG5cbiAgICAvL0FjdGl2YXRlIGZhc3QgY2xpY2tcbiAgICBpZiAoby5lbmFibGVGYXN0Y2xpY2sgJiYgdHlwZW9mIEZhc3RDbGljayAhPSAndW5kZWZpbmVkJykge1xuICAgICAgICBGYXN0Q2xpY2suYXR0YWNoKGRvY3VtZW50LmJvZHkpO1xuICAgIH1cblxuICAgIC8vQWN0aXZhdGUgZGlyZWN0IGNoYXQgd2lkZ2V0XG4gICAgaWYgKG8uZGlyZWN0Q2hhdC5lbmFibGUpIHtcbiAgICAgICAgJChkb2N1bWVudCkub24oJ2NsaWNrJywgby5kaXJlY3RDaGF0LmNvbnRhY3RUb2dnbGVTZWxlY3RvciwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdmFyIGJveCA9ICQodGhpcykucGFyZW50cygnLmRpcmVjdC1jaGF0JykuZmlyc3QoKTtcbiAgICAgICAgICAgIGJveC50b2dnbGVDbGFzcygnZGlyZWN0LWNoYXQtY29udGFjdHMtb3BlbicpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICAvKlxyXG4gICAgICogSU5JVElBTElaRSBCVVRUT04gVE9HR0xFXHJcbiAgICAgKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgICAqL1xuICAgICQoJy5idG4tZ3JvdXBbZGF0YS10b2dnbGU9XCJidG4tdG9nZ2xlXCJdJykuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBncm91cCA9ICQodGhpcyk7XG4gICAgICAgICQodGhpcykuZmluZChcIi5idG5cIikub24oJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgIGdyb3VwLmZpbmQoXCIuYnRuLmFjdGl2ZVwiKS5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcbiAgICAgICAgICAgICQodGhpcykuYWRkQ2xhc3MoXCJhY3RpdmVcIik7XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufSk7XG5cbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogLSBJbml0aWFsaXplIHRoZSBBZG1pbkxURSBPYmplY3QgLVxyXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqIEFsbCBBZG1pbkxURSBmdW5jdGlvbnMgYXJlIGltcGxlbWVudGVkIGJlbG93LlxyXG4gKi9cbmZ1bmN0aW9uIF9pbml0KCkge1xuICAgICd1c2Ugc3RyaWN0JztcbiAgICAvKiBMYXlvdXRcclxuICAgICAqID09PT09PVxyXG4gICAgICogRml4ZXMgdGhlIGxheW91dCBoZWlnaHQgaW4gY2FzZSBtaW4taGVpZ2h0IGZhaWxzLlxyXG4gICAgICpcclxuICAgICAqIEB0eXBlIE9iamVjdFxyXG4gICAgICogQHVzYWdlICQuQWRtaW5MVEUubGF5b3V0LmFjdGl2YXRlKClcclxuICAgICAqICAgICAgICAkLkFkbWluTFRFLmxheW91dC5maXgoKVxyXG4gICAgICogICAgICAgICQuQWRtaW5MVEUubGF5b3V0LmZpeFNpZGViYXIoKVxyXG4gICAgICovXG5cbiAgICAkLkFkbWluTFRFLmxheW91dCA9IHtcbiAgICAgICAgYWN0aXZhdGU6IGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xuICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgICAgIF90aGlzLmZpeCgpO1xuICAgICAgICAgICAgX3RoaXMuZml4U2lkZWJhcigpO1xuICAgICAgICAgICAgJCh3aW5kb3csIFwiLndyYXBwZXJcIikucmVzaXplKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBfdGhpcy5maXgoKTtcbiAgICAgICAgICAgICAgICBfdGhpcy5maXhTaWRlYmFyKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgZml4OiBmdW5jdGlvbiBmaXgoKSB7XG4gICAgICAgICAgICAvL0dldCB3aW5kb3cgaGVpZ2h0IGFuZCB0aGUgd3JhcHBlciBoZWlnaHRcbiAgICAgICAgICAgIHZhciBuZWcgPSAkKCcubWFpbi1oZWFkZXInKS5vdXRlckhlaWdodCgpICsgJCgnLm1haW4tZm9vdGVyJykub3V0ZXJIZWlnaHQoKTtcbiAgICAgICAgICAgIHZhciB3aW5kb3dfaGVpZ2h0ID0gJCh3aW5kb3cpLmhlaWdodCgpO1xuICAgICAgICAgICAgdmFyIHNpZGViYXJfaGVpZ2h0ID0gJChcIi5zaWRlYmFyXCIpLmhlaWdodCgpO1xuICAgICAgICAgICAgLy9TZXQgdGhlIG1pbi1oZWlnaHQgb2YgdGhlIGNvbnRlbnQgYW5kIHNpZGViYXIgYmFzZWQgb24gdGhlXG4gICAgICAgICAgICAvL3RoZSBoZWlnaHQgb2YgdGhlIGRvY3VtZW50LlxuICAgICAgICAgICAgaWYgKCQoXCJib2R5XCIpLmhhc0NsYXNzKFwiZml4ZWRcIikpIHtcbiAgICAgICAgICAgICAgICAkKFwiLmNvbnRlbnQtd3JhcHBlciwgLnJpZ2h0LXNpZGVcIikuY3NzKCdtaW4taGVpZ2h0Jywgd2luZG93X2hlaWdodCAtICQoJy5tYWluLWZvb3RlcicpLm91dGVySGVpZ2h0KCkpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB2YXIgcG9zdFNldFdpZHRoO1xuICAgICAgICAgICAgICAgIGlmICh3aW5kb3dfaGVpZ2h0ID49IHNpZGViYXJfaGVpZ2h0KSB7XG4gICAgICAgICAgICAgICAgICAgICQoXCIuY29udGVudC13cmFwcGVyLCAucmlnaHQtc2lkZVwiKS5jc3MoJ21pbi1oZWlnaHQnLCB3aW5kb3dfaGVpZ2h0IC0gbmVnKTtcbiAgICAgICAgICAgICAgICAgICAgcG9zdFNldFdpZHRoID0gd2luZG93X2hlaWdodCAtIG5lZztcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAkKFwiLmNvbnRlbnQtd3JhcHBlciwgLnJpZ2h0LXNpZGVcIikuY3NzKCdtaW4taGVpZ2h0Jywgc2lkZWJhcl9oZWlnaHQpO1xuICAgICAgICAgICAgICAgICAgICBwb3N0U2V0V2lkdGggPSBzaWRlYmFyX2hlaWdodDtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAvL0ZpeCBmb3IgdGhlIGNvbnRyb2wgc2lkZWJhciBoZWlnaHRcbiAgICAgICAgICAgICAgICB2YXIgY29udHJvbFNpZGViYXIgPSAkKCQuQWRtaW5MVEUub3B0aW9ucy5jb250cm9sU2lkZWJhck9wdGlvbnMuc2VsZWN0b3IpO1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgY29udHJvbFNpZGViYXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNvbnRyb2xTaWRlYmFyLmhlaWdodCgpID4gcG9zdFNldFdpZHRoKSAkKFwiLmNvbnRlbnQtd3JhcHBlciwgLnJpZ2h0LXNpZGVcIikuY3NzKCdtaW4taGVpZ2h0JywgY29udHJvbFNpZGViYXIuaGVpZ2h0KCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgZml4U2lkZWJhcjogZnVuY3Rpb24gZml4U2lkZWJhcigpIHtcbiAgICAgICAgICAgIC8vTWFrZSBzdXJlIHRoZSBib2R5IHRhZyBoYXMgdGhlIC5maXhlZCBjbGFzc1xuICAgICAgICAgICAgaWYgKCEkKFwiYm9keVwiKS5oYXNDbGFzcyhcImZpeGVkXCIpKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiAkLmZuLnNsaW1TY3JvbGwgIT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAgICAgJChcIi5zaWRlYmFyXCIpLnNsaW1TY3JvbGwoeyBkZXN0cm95OiB0cnVlIH0pLmhlaWdodChcImF1dG9cIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodHlwZW9mICQuZm4uc2xpbVNjcm9sbCA9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuY29uc29sZSkge1xuICAgICAgICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmVycm9yKFwiRXJyb3I6IHRoZSBmaXhlZCBsYXlvdXQgcmVxdWlyZXMgdGhlIHNsaW1zY3JvbGwgcGx1Z2luIVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vRW5hYmxlIHNsaW1zY3JvbGwgZm9yIGZpeGVkIGxheW91dFxuICAgICAgICAgICAgaWYgKCQuQWRtaW5MVEUub3B0aW9ucy5zaWRlYmFyU2xpbVNjcm9sbCkge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgJC5mbi5zbGltU2Nyb2xsICE9ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vRGVzdHJveSBpZiBpdCBleGlzdHNcbiAgICAgICAgICAgICAgICAgICAgJChcIi5zaWRlYmFyXCIpLnNsaW1TY3JvbGwoeyBkZXN0cm95OiB0cnVlIH0pLmhlaWdodChcImF1dG9cIik7XG4gICAgICAgICAgICAgICAgICAgIC8vQWRkIHNsaW1zY3JvbGxcbiAgICAgICAgICAgICAgICAgICAgJChcIi5zaWRlYmFyXCIpLnNsaW1zY3JvbGwoe1xuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAkKHdpbmRvdykuaGVpZ2h0KCkgLSAkKFwiLm1haW4taGVhZGVyXCIpLmhlaWdodCgpICsgXCJweFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IFwicmdiYSgwLDAsMCwwLjIpXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBzaXplOiBcIjNweFwiXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvKiBQdXNoTWVudSgpXHJcbiAgICAgKiA9PT09PT09PT09XHJcbiAgICAgKiBBZGRzIHRoZSBwdXNoIG1lbnUgZnVuY3Rpb25hbGl0eSB0byB0aGUgc2lkZWJhci5cclxuICAgICAqXHJcbiAgICAgKiBAdHlwZSBGdW5jdGlvblxyXG4gICAgICogQHVzYWdlOiAkLkFkbWluTFRFLnB1c2hNZW51KFwiW2RhdGEtdG9nZ2xlPSdvZmZjYW52YXMnXVwiKVxyXG4gICAgICovXG4gICAgJC5BZG1pbkxURS5wdXNoTWVudSA9IHtcbiAgICAgICAgYWN0aXZhdGU6IGZ1bmN0aW9uIGFjdGl2YXRlKHRvZ2dsZUJ0bikge1xuICAgICAgICAgICAgLy9HZXQgdGhlIHNjcmVlbiBzaXplc1xuICAgICAgICAgICAgdmFyIHNjcmVlblNpemVzID0gJC5BZG1pbkxURS5vcHRpb25zLnNjcmVlblNpemVzO1xuXG4gICAgICAgICAgICAvL0VuYWJsZSBzaWRlYmFyIHRvZ2dsZVxuICAgICAgICAgICAgJChkb2N1bWVudCkub24oJ2NsaWNrJywgdG9nZ2xlQnRuLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICAgICAgICAgIC8vRW5hYmxlIHNpZGViYXIgcHVzaCBtZW51XG4gICAgICAgICAgICAgICAgaWYgKCQod2luZG93KS53aWR0aCgpID4gc2NyZWVuU2l6ZXMuc20gLSAxKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICgkKFwiYm9keVwiKS5oYXNDbGFzcygnc2lkZWJhci1jb2xsYXBzZScpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkKFwiYm9keVwiKS5yZW1vdmVDbGFzcygnc2lkZWJhci1jb2xsYXBzZScpLnRyaWdnZXIoJ2V4cGFuZGVkLnB1c2hNZW51Jyk7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkKFwiYm9keVwiKS5hZGRDbGFzcygnc2lkZWJhci1jb2xsYXBzZScpLnRyaWdnZXIoJ2NvbGxhcHNlZC5wdXNoTWVudScpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vSGFuZGxlIHNpZGViYXIgcHVzaCBtZW51IGZvciBzbWFsbCBzY3JlZW5zXG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoJChcImJvZHlcIikuaGFzQ2xhc3MoJ3NpZGViYXItb3BlbicpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJChcImJvZHlcIikucmVtb3ZlQ2xhc3MoJ3NpZGViYXItb3BlbicpLnJlbW92ZUNsYXNzKCdzaWRlYmFyLWNvbGxhcHNlJykudHJpZ2dlcignY29sbGFwc2VkLnB1c2hNZW51Jyk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoXCJib2R5XCIpLmFkZENsYXNzKCdzaWRlYmFyLW9wZW4nKS50cmlnZ2VyKCdleHBhbmRlZC5wdXNoTWVudScpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgJChcIi5jb250ZW50LXdyYXBwZXJcIikuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIC8vRW5hYmxlIGhpZGUgbWVudSB3aGVuIGNsaWNraW5nIG9uIHRoZSBjb250ZW50LXdyYXBwZXIgb24gc21hbGwgc2NyZWVuc1xuICAgICAgICAgICAgICAgIGlmICgkKHdpbmRvdykud2lkdGgoKSA8PSBzY3JlZW5TaXplcy5zbSAtIDEgJiYgJChcImJvZHlcIikuaGFzQ2xhc3MoXCJzaWRlYmFyLW9wZW5cIikpIHtcbiAgICAgICAgICAgICAgICAgICAgJChcImJvZHlcIikucmVtb3ZlQ2xhc3MoJ3NpZGViYXItb3BlbicpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAvL0VuYWJsZSBleHBhbmQgb24gaG92ZXIgZm9yIHNpZGViYXIgbWluaVxuICAgICAgICAgICAgaWYgKCQuQWRtaW5MVEUub3B0aW9ucy5zaWRlYmFyRXhwYW5kT25Ib3ZlciB8fCAkKCdib2R5JykuaGFzQ2xhc3MoJ2ZpeGVkJykgJiYgJCgnYm9keScpLmhhc0NsYXNzKCdzaWRlYmFyLW1pbmknKSkge1xuICAgICAgICAgICAgICAgIHRoaXMuZXhwYW5kT25Ib3ZlcigpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBleHBhbmRPbkhvdmVyOiBmdW5jdGlvbiBleHBhbmRPbkhvdmVyKCkge1xuICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgICAgIHZhciBzY3JlZW5XaWR0aCA9ICQuQWRtaW5MVEUub3B0aW9ucy5zY3JlZW5TaXplcy5zbSAtIDE7XG4gICAgICAgICAgICAvL0V4cGFuZCBzaWRlYmFyIG9uIGhvdmVyXG4gICAgICAgICAgICAkKCcubWFpbi1zaWRlYmFyJykuaG92ZXIoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGlmICgkKCdib2R5JykuaGFzQ2xhc3MoJ3NpZGViYXItbWluaScpICYmICQoXCJib2R5XCIpLmhhc0NsYXNzKCdzaWRlYmFyLWNvbGxhcHNlJykgJiYgJCh3aW5kb3cpLndpZHRoKCkgPiBzY3JlZW5XaWR0aCkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5leHBhbmQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgaWYgKCQoJ2JvZHknKS5oYXNDbGFzcygnc2lkZWJhci1taW5pJykgJiYgJCgnYm9keScpLmhhc0NsYXNzKCdzaWRlYmFyLWV4cGFuZGVkLW9uLWhvdmVyJykgJiYgJCh3aW5kb3cpLndpZHRoKCkgPiBzY3JlZW5XaWR0aCkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5jb2xsYXBzZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICBleHBhbmQ6IGZ1bmN0aW9uIGV4cGFuZCgpIHtcbiAgICAgICAgICAgICQoXCJib2R5XCIpLnJlbW92ZUNsYXNzKCdzaWRlYmFyLWNvbGxhcHNlJykuYWRkQ2xhc3MoJ3NpZGViYXItZXhwYW5kZWQtb24taG92ZXInKTtcbiAgICAgICAgfSxcbiAgICAgICAgY29sbGFwc2U6IGZ1bmN0aW9uIGNvbGxhcHNlKCkge1xuICAgICAgICAgICAgaWYgKCQoJ2JvZHknKS5oYXNDbGFzcygnc2lkZWJhci1leHBhbmRlZC1vbi1ob3ZlcicpKSB7XG4gICAgICAgICAgICAgICAgJCgnYm9keScpLnJlbW92ZUNsYXNzKCdzaWRlYmFyLWV4cGFuZGVkLW9uLWhvdmVyJykuYWRkQ2xhc3MoJ3NpZGViYXItY29sbGFwc2UnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvKiBUcmVlKClcclxuICAgICAqID09PT09PVxyXG4gICAgICogQ29udmVydHMgdGhlIHNpZGViYXIgaW50byBhIG11bHRpbGV2ZWxcclxuICAgICAqIHRyZWUgdmlldyBtZW51LlxyXG4gICAgICpcclxuICAgICAqIEB0eXBlIEZ1bmN0aW9uXHJcbiAgICAgKiBAVXNhZ2U6ICQuQWRtaW5MVEUudHJlZSgnLnNpZGViYXInKVxyXG4gICAgICovXG4gICAgJC5BZG1pbkxURS50cmVlID0gZnVuY3Rpb24gKG1lbnUpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdmFyIGFuaW1hdGlvblNwZWVkID0gJC5BZG1pbkxURS5vcHRpb25zLmFuaW1hdGlvblNwZWVkO1xuICAgICAgICAkKGRvY3VtZW50KS5vZmYoJ2NsaWNrJywgbWVudSArICcgbGkgYScpLm9uKCdjbGljaycsIG1lbnUgKyAnIGxpIGEnLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgLy9HZXQgdGhlIGNsaWNrZWQgbGluayBhbmQgdGhlIG5leHQgZWxlbWVudFxuICAgICAgICAgICAgdmFyICR0aGlzID0gJCh0aGlzKTtcbiAgICAgICAgICAgIHZhciBjaGVja0VsZW1lbnQgPSAkdGhpcy5uZXh0KCk7XG5cbiAgICAgICAgICAgIC8vQ2hlY2sgaWYgdGhlIG5leHQgZWxlbWVudCBpcyBhIG1lbnUgYW5kIGlzIHZpc2libGVcbiAgICAgICAgICAgIGlmIChjaGVja0VsZW1lbnQuaXMoJy50cmVldmlldy1tZW51JykgJiYgY2hlY2tFbGVtZW50LmlzKCc6dmlzaWJsZScpICYmICEkKCdib2R5JykuaGFzQ2xhc3MoJ3NpZGViYXItY29sbGFwc2UnKSkge1xuICAgICAgICAgICAgICAgIC8vQ2xvc2UgdGhlIG1lbnVcbiAgICAgICAgICAgICAgICBjaGVja0VsZW1lbnQuc2xpZGVVcChhbmltYXRpb25TcGVlZCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBjaGVja0VsZW1lbnQucmVtb3ZlQ2xhc3MoJ21lbnUtb3BlbicpO1xuICAgICAgICAgICAgICAgICAgICAvL0ZpeCB0aGUgbGF5b3V0IGluIGNhc2UgdGhlIHNpZGViYXIgc3RyZXRjaGVzIG92ZXIgdGhlIGhlaWdodCBvZiB0aGUgd2luZG93XG4gICAgICAgICAgICAgICAgICAgIC8vX3RoaXMubGF5b3V0LmZpeCgpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGNoZWNrRWxlbWVudC5wYXJlbnQoXCJsaVwiKS5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vSWYgdGhlIG1lbnUgaXMgbm90IHZpc2libGVcbiAgICAgICAgICAgIGVsc2UgaWYgKGNoZWNrRWxlbWVudC5pcygnLnRyZWV2aWV3LW1lbnUnKSAmJiAhY2hlY2tFbGVtZW50LmlzKCc6dmlzaWJsZScpKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vR2V0IHRoZSBwYXJlbnQgbWVudVxuICAgICAgICAgICAgICAgICAgICB2YXIgcGFyZW50ID0gJHRoaXMucGFyZW50cygndWwnKS5maXJzdCgpO1xuICAgICAgICAgICAgICAgICAgICAvL0Nsb3NlIGFsbCBvcGVuIG1lbnVzIHdpdGhpbiB0aGUgcGFyZW50XG4gICAgICAgICAgICAgICAgICAgIHZhciB1bCA9IHBhcmVudC5maW5kKCd1bDp2aXNpYmxlJykuc2xpZGVVcChhbmltYXRpb25TcGVlZCk7XG4gICAgICAgICAgICAgICAgICAgIC8vUmVtb3ZlIHRoZSBtZW51LW9wZW4gY2xhc3MgZnJvbSB0aGUgcGFyZW50XG4gICAgICAgICAgICAgICAgICAgIHVsLnJlbW92ZUNsYXNzKCdtZW51LW9wZW4nKTtcbiAgICAgICAgICAgICAgICAgICAgLy9HZXQgdGhlIHBhcmVudCBsaVxuICAgICAgICAgICAgICAgICAgICB2YXIgcGFyZW50X2xpID0gJHRoaXMucGFyZW50KFwibGlcIik7XG5cbiAgICAgICAgICAgICAgICAgICAgLy9PcGVuIHRoZSB0YXJnZXQgbWVudSBhbmQgYWRkIHRoZSBtZW51LW9wZW4gY2xhc3NcbiAgICAgICAgICAgICAgICAgICAgY2hlY2tFbGVtZW50LnNsaWRlRG93bihhbmltYXRpb25TcGVlZCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy9BZGQgdGhlIGNsYXNzIGFjdGl2ZSB0byB0aGUgcGFyZW50IGxpXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGVja0VsZW1lbnQuYWRkQ2xhc3MoJ21lbnUtb3BlbicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcGFyZW50LmZpbmQoJ2xpLmFjdGl2ZScpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudF9saS5hZGRDbGFzcygnYWN0aXZlJyk7XG4gICAgICAgICAgICAgICAgICAgICAgICAvL0ZpeCB0aGUgbGF5b3V0IGluIGNhc2UgdGhlIHNpZGViYXIgc3RyZXRjaGVzIG92ZXIgdGhlIGhlaWdodCBvZiB0aGUgd2luZG93XG4gICAgICAgICAgICAgICAgICAgICAgICBfdGhpcy5sYXlvdXQuZml4KCk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vaWYgdGhpcyBpc24ndCBhIGxpbmssIHByZXZlbnQgdGhlIHBhZ2UgZnJvbSBiZWluZyByZWRpcmVjdGVkXG4gICAgICAgICAgICBpZiAoY2hlY2tFbGVtZW50LmlzKCcudHJlZXZpZXctbWVudScpKSB7XG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgLyogQ29udHJvbFNpZGViYXJcclxuICAgICAqID09PT09PT09PT09PT09XHJcbiAgICAgKiBBZGRzIGZ1bmN0aW9uYWxpdHkgdG8gdGhlIHJpZ2h0IHNpZGViYXJcclxuICAgICAqXHJcbiAgICAgKiBAdHlwZSBPYmplY3RcclxuICAgICAqIEB1c2FnZSAkLkFkbWluTFRFLmNvbnRyb2xTaWRlYmFyLmFjdGl2YXRlKG9wdGlvbnMpXHJcbiAgICAgKi9cbiAgICAkLkFkbWluTFRFLmNvbnRyb2xTaWRlYmFyID0ge1xuICAgICAgICAvL2luc3RhbnRpYXRlIHRoZSBvYmplY3RcbiAgICAgICAgYWN0aXZhdGU6IGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xuICAgICAgICAgICAgLy9HZXQgdGhlIG9iamVjdFxuICAgICAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgICAgIC8vVXBkYXRlIG9wdGlvbnNcbiAgICAgICAgICAgIHZhciBvID0gJC5BZG1pbkxURS5vcHRpb25zLmNvbnRyb2xTaWRlYmFyT3B0aW9ucztcbiAgICAgICAgICAgIC8vR2V0IHRoZSBzaWRlYmFyXG4gICAgICAgICAgICB2YXIgc2lkZWJhciA9ICQoby5zZWxlY3Rvcik7XG4gICAgICAgICAgICAvL1RoZSB0b2dnbGUgYnV0dG9uXG4gICAgICAgICAgICB2YXIgYnRuID0gJChvLnRvZ2dsZUJ0blNlbGVjdG9yKTtcblxuICAgICAgICAgICAgLy9MaXN0ZW4gdG8gdGhlIGNsaWNrIGV2ZW50XG4gICAgICAgICAgICBidG4ub24oJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgLy9JZiB0aGUgc2lkZWJhciBpcyBub3Qgb3BlblxuICAgICAgICAgICAgICAgIGlmICghc2lkZWJhci5oYXNDbGFzcygnY29udHJvbC1zaWRlYmFyLW9wZW4nKSAmJiAhJCgnYm9keScpLmhhc0NsYXNzKCdjb250cm9sLXNpZGViYXItb3BlbicpKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vT3BlbiB0aGUgc2lkZWJhclxuICAgICAgICAgICAgICAgICAgICBfdGhpcy5vcGVuKHNpZGViYXIsIG8uc2xpZGUpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIF90aGlzLmNsb3NlKHNpZGViYXIsIG8uc2xpZGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAvL0lmIHRoZSBib2R5IGhhcyBhIGJveGVkIGxheW91dCwgZml4IHRoZSBzaWRlYmFyIGJnIHBvc2l0aW9uXG4gICAgICAgICAgICB2YXIgYmcgPSAkKFwiLmNvbnRyb2wtc2lkZWJhci1iZ1wiKTtcbiAgICAgICAgICAgIF90aGlzLl9maXgoYmcpO1xuXG4gICAgICAgICAgICAvL0lmIHRoZSBib2R5IGhhcyBhIGZpeGVkIGxheW91dCwgbWFrZSB0aGUgY29udHJvbCBzaWRlYmFyIGZpeGVkXG4gICAgICAgICAgICBpZiAoJCgnYm9keScpLmhhc0NsYXNzKCdmaXhlZCcpKSB7XG4gICAgICAgICAgICAgICAgX3RoaXMuX2ZpeEZvckZpeGVkKHNpZGViYXIpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvL0lmIHRoZSBjb250ZW50IGhlaWdodCBpcyBsZXNzIHRoYW4gdGhlIHNpZGViYXIncyBoZWlnaHQsIGZvcmNlIG1heCBoZWlnaHRcbiAgICAgICAgICAgICAgICBpZiAoJCgnLmNvbnRlbnQtd3JhcHBlciwgLnJpZ2h0LXNpZGUnKS5oZWlnaHQoKSA8IHNpZGViYXIuaGVpZ2h0KCkpIHtcbiAgICAgICAgICAgICAgICAgICAgX3RoaXMuX2ZpeEZvckNvbnRlbnQoc2lkZWJhcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICAvL09wZW4gdGhlIGNvbnRyb2wgc2lkZWJhclxuICAgICAgICBvcGVuOiBmdW5jdGlvbiBvcGVuKHNpZGViYXIsIHNsaWRlKSB7XG4gICAgICAgICAgICAvL1NsaWRlIG92ZXIgY29udGVudFxuICAgICAgICAgICAgaWYgKHNsaWRlKSB7XG4gICAgICAgICAgICAgICAgc2lkZWJhci5hZGRDbGFzcygnY29udHJvbC1zaWRlYmFyLW9wZW4nKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy9QdXNoIHRoZSBjb250ZW50IGJ5IGFkZGluZyB0aGUgb3BlbiBjbGFzcyB0byB0aGUgYm9keSBpbnN0ZWFkXG4gICAgICAgICAgICAgICAgLy9vZiB0aGUgc2lkZWJhciBpdHNlbGZcbiAgICAgICAgICAgICAgICAkKCdib2R5JykuYWRkQ2xhc3MoJ2NvbnRyb2wtc2lkZWJhci1vcGVuJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIC8vQ2xvc2UgdGhlIGNvbnRyb2wgc2lkZWJhclxuICAgICAgICBjbG9zZTogZnVuY3Rpb24gY2xvc2Uoc2lkZWJhciwgc2xpZGUpIHtcbiAgICAgICAgICAgIGlmIChzbGlkZSkge1xuICAgICAgICAgICAgICAgIHNpZGViYXIucmVtb3ZlQ2xhc3MoJ2NvbnRyb2wtc2lkZWJhci1vcGVuJyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICQoJ2JvZHknKS5yZW1vdmVDbGFzcygnY29udHJvbC1zaWRlYmFyLW9wZW4nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgX2ZpeDogZnVuY3Rpb24gX2ZpeChzaWRlYmFyKSB7XG4gICAgICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICAgICAgaWYgKCQoXCJib2R5XCIpLmhhc0NsYXNzKCdsYXlvdXQtYm94ZWQnKSkge1xuICAgICAgICAgICAgICAgIHNpZGViYXIuY3NzKCdwb3NpdGlvbicsICdhYnNvbHV0ZScpO1xuICAgICAgICAgICAgICAgIHNpZGViYXIuaGVpZ2h0KCQoXCIud3JhcHBlclwiKS5oZWlnaHQoKSk7XG4gICAgICAgICAgICAgICAgaWYgKF90aGlzLmhhc0JpbmRlZFJlc2l6ZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICQod2luZG93KS5yZXNpemUoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBfdGhpcy5fZml4KHNpZGViYXIpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIF90aGlzLmhhc0JpbmRlZFJlc2l6ZSA9IHRydWU7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHNpZGViYXIuY3NzKHtcbiAgICAgICAgICAgICAgICAgICAgJ3Bvc2l0aW9uJzogJ2ZpeGVkJyxcbiAgICAgICAgICAgICAgICAgICAgJ2hlaWdodCc6ICdhdXRvJ1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBfZml4Rm9yRml4ZWQ6IGZ1bmN0aW9uIF9maXhGb3JGaXhlZChzaWRlYmFyKSB7XG4gICAgICAgICAgICBzaWRlYmFyLmNzcyh7XG4gICAgICAgICAgICAgICAgJ3Bvc2l0aW9uJzogJ2ZpeGVkJyxcbiAgICAgICAgICAgICAgICAnbWF4LWhlaWdodCc6ICcxMDAlJyxcbiAgICAgICAgICAgICAgICAnb3ZlcmZsb3cnOiAnYXV0bycsXG4gICAgICAgICAgICAgICAgJ3BhZGRpbmctYm90dG9tJzogJzUwcHgnXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgX2ZpeEZvckNvbnRlbnQ6IGZ1bmN0aW9uIF9maXhGb3JDb250ZW50KHNpZGViYXIpIHtcbiAgICAgICAgICAgICQoXCIuY29udGVudC13cmFwcGVyLCAucmlnaHQtc2lkZVwiKS5jc3MoJ21pbi1oZWlnaHQnLCBzaWRlYmFyLmhlaWdodCgpKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvKiBCb3hXaWRnZXRcclxuICAgICAqID09PT09PT09PVxyXG4gICAgICogQm94V2lkZ2V0IGlzIGEgcGx1Z2luIHRvIGhhbmRsZSBjb2xsYXBzaW5nIGFuZFxyXG4gICAgICogcmVtb3ZpbmcgYm94ZXMgZnJvbSB0aGUgc2NyZWVuLlxyXG4gICAgICpcclxuICAgICAqIEB0eXBlIE9iamVjdFxyXG4gICAgICogQHVzYWdlICQuQWRtaW5MVEUuYm94V2lkZ2V0LmFjdGl2YXRlKClcclxuICAgICAqICAgICAgICBTZXQgYWxsIHlvdXIgb3B0aW9ucyBpbiB0aGUgbWFpbiAkLkFkbWluTFRFLm9wdGlvbnMgb2JqZWN0XHJcbiAgICAgKi9cbiAgICAkLkFkbWluTFRFLmJveFdpZGdldCA9IHtcbiAgICAgICAgc2VsZWN0b3JzOiAkLkFkbWluTFRFLm9wdGlvbnMuYm94V2lkZ2V0T3B0aW9ucy5ib3hXaWRnZXRTZWxlY3RvcnMsXG4gICAgICAgIGljb25zOiAkLkFkbWluTFRFLm9wdGlvbnMuYm94V2lkZ2V0T3B0aW9ucy5ib3hXaWRnZXRJY29ucyxcbiAgICAgICAgYW5pbWF0aW9uU3BlZWQ6ICQuQWRtaW5MVEUub3B0aW9ucy5hbmltYXRpb25TcGVlZCxcbiAgICAgICAgYWN0aXZhdGU6IGZ1bmN0aW9uIGFjdGl2YXRlKF9ib3gpIHtcbiAgICAgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgICAgICBpZiAoIV9ib3gpIHtcbiAgICAgICAgICAgICAgICBfYm94ID0gZG9jdW1lbnQ7IC8vIGFjdGl2YXRlIGFsbCBib3hlcyBwZXIgZGVmYXVsdFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy9MaXN0ZW4gZm9yIGNvbGxhcHNlIGV2ZW50IHRyaWdnZXJzXG4gICAgICAgICAgICAkKF9ib3gpLm9uKCdjbGljaycsIF90aGlzLnNlbGVjdG9ycy5jb2xsYXBzZSwgZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgX3RoaXMuY29sbGFwc2UoJCh0aGlzKSk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgLy9MaXN0ZW4gZm9yIHJlbW92ZSBldmVudCB0cmlnZ2Vyc1xuICAgICAgICAgICAgJChfYm94KS5vbignY2xpY2snLCBfdGhpcy5zZWxlY3RvcnMucmVtb3ZlLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICBfdGhpcy5yZW1vdmUoJCh0aGlzKSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgY29sbGFwc2U6IGZ1bmN0aW9uIGNvbGxhcHNlKGVsZW1lbnQpIHtcbiAgICAgICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgICAgICAvL0ZpbmQgdGhlIGJveCBwYXJlbnRcbiAgICAgICAgICAgIHZhciBib3ggPSBlbGVtZW50LnBhcmVudHMoXCIuYm94XCIpLmZpcnN0KCk7XG4gICAgICAgICAgICAvL0ZpbmQgdGhlIGJvZHkgYW5kIHRoZSBmb290ZXJcbiAgICAgICAgICAgIHZhciBib3hfY29udGVudCA9IGJveC5maW5kKFwiPiAuYm94LWJvZHksID4gLmJveC1mb290ZXIsID4gZm9ybSAgPi5ib3gtYm9keSwgPiBmb3JtID4gLmJveC1mb290ZXJcIik7XG4gICAgICAgICAgICBpZiAoIWJveC5oYXNDbGFzcyhcImNvbGxhcHNlZC1ib3hcIikpIHtcbiAgICAgICAgICAgICAgICAvL0NvbnZlcnQgbWludXMgaW50byBwbHVzXG4gICAgICAgICAgICAgICAgZWxlbWVudC5jaGlsZHJlbihcIjpmaXJzdFwiKS5yZW1vdmVDbGFzcyhfdGhpcy5pY29ucy5jb2xsYXBzZSkuYWRkQ2xhc3MoX3RoaXMuaWNvbnMub3Blbik7XG4gICAgICAgICAgICAgICAgLy9IaWRlIHRoZSBjb250ZW50XG4gICAgICAgICAgICAgICAgYm94X2NvbnRlbnQuc2xpZGVVcChfdGhpcy5hbmltYXRpb25TcGVlZCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICBib3guYWRkQ2xhc3MoXCJjb2xsYXBzZWQtYm94XCIpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvL0NvbnZlcnQgcGx1cyBpbnRvIG1pbnVzXG4gICAgICAgICAgICAgICAgZWxlbWVudC5jaGlsZHJlbihcIjpmaXJzdFwiKS5yZW1vdmVDbGFzcyhfdGhpcy5pY29ucy5vcGVuKS5hZGRDbGFzcyhfdGhpcy5pY29ucy5jb2xsYXBzZSk7XG4gICAgICAgICAgICAgICAgLy9TaG93IHRoZSBjb250ZW50XG4gICAgICAgICAgICAgICAgYm94X2NvbnRlbnQuc2xpZGVEb3duKF90aGlzLmFuaW1hdGlvblNwZWVkLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGJveC5yZW1vdmVDbGFzcyhcImNvbGxhcHNlZC1ib3hcIik7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKGVsZW1lbnQpIHtcbiAgICAgICAgICAgIC8vRmluZCB0aGUgYm94IHBhcmVudFxuICAgICAgICAgICAgdmFyIGJveCA9IGVsZW1lbnQucGFyZW50cyhcIi5ib3hcIikuZmlyc3QoKTtcbiAgICAgICAgICAgIGJveC5zbGlkZVVwKHRoaXMuYW5pbWF0aW9uU3BlZWQpO1xuICAgICAgICB9XG4gICAgfTtcbn1cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqIC0gQ3VzdG9tIFBsdWdpbnMgLVxyXG4gKiAtLS0tLS0tLS0tLS0tLS0tLS1cclxuICogQWxsIGN1c3RvbSBwbHVnaW5zIGFyZSBkZWZpbmVkIGJlbG93LlxyXG4gKi9cblxuLypcclxuICogQk9YIFJFRlJFU0ggQlVUVE9OXHJcbiAqIC0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiBUaGlzIGlzIGEgY3VzdG9tIHBsdWdpbiB0byB1c2Ugd2l0aCB0aGUgY29tcG9uZW50IEJPWC4gSXQgYWxsb3dzIHlvdSB0byBhZGRcclxuICogYSByZWZyZXNoIGJ1dHRvbiB0byB0aGUgYm94LiBJdCBjb252ZXJ0cyB0aGUgYm94J3Mgc3RhdGUgdG8gYSBsb2FkaW5nIHN0YXRlLlxyXG4gKlxyXG4gKiBAdHlwZSBwbHVnaW5cclxuICogQHVzYWdlICQoXCIjYm94LXdpZGdldFwiKS5ib3hSZWZyZXNoKCBvcHRpb25zICk7XHJcbiAqL1xuKGZ1bmN0aW9uICgkKSB7XG5cbiAgICBcInVzZSBzdHJpY3RcIjtcblxuICAgICQuZm4uYm94UmVmcmVzaCA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG5cbiAgICAgICAgLy8gUmVuZGVyIG9wdGlvbnNcbiAgICAgICAgdmFyIHNldHRpbmdzID0gJC5leHRlbmQoe1xuICAgICAgICAgICAgLy9SZWZyZXNoIGJ1dHRvbiBzZWxlY3RvclxuICAgICAgICAgICAgdHJpZ2dlcjogXCIucmVmcmVzaC1idG5cIixcbiAgICAgICAgICAgIC8vRmlsZSBzb3VyY2UgdG8gYmUgbG9hZGVkIChlLmc6IGFqYXgvc3JjLnBocClcbiAgICAgICAgICAgIHNvdXJjZTogXCJcIixcbiAgICAgICAgICAgIC8vQ2FsbGJhY2tzXG4gICAgICAgICAgICBvbkxvYWRTdGFydDogZnVuY3Rpb24gb25Mb2FkU3RhcnQoYm94KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGJveDtcbiAgICAgICAgICAgIH0sIC8vUmlnaHQgYWZ0ZXIgdGhlIGJ1dHRvbiBoYXMgYmVlbiBjbGlja2VkXG4gICAgICAgICAgICBvbkxvYWREb25lOiBmdW5jdGlvbiBvbkxvYWREb25lKGJveCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBib3g7XG4gICAgICAgICAgICB9IC8vV2hlbiB0aGUgc291cmNlIGhhcyBiZWVuIGxvYWRlZFxuXG4gICAgICAgIH0sIG9wdGlvbnMpO1xuXG4gICAgICAgIC8vVGhlIG92ZXJsYXlcbiAgICAgICAgdmFyIG92ZXJsYXkgPSAkKCc8ZGl2IGNsYXNzPVwib3ZlcmxheVwiPjxkaXYgY2xhc3M9XCJmYSBmYS1yZWZyZXNoIGZhLXNwaW5cIj48L2Rpdj48L2Rpdj4nKTtcblxuICAgICAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIC8vaWYgYSBzb3VyY2UgaXMgc3BlY2lmaWVkXG4gICAgICAgICAgICBpZiAoc2V0dGluZ3Muc291cmNlID09PSBcIlwiKSB7XG4gICAgICAgICAgICAgICAgaWYgKHdpbmRvdy5jb25zb2xlKSB7XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5jb25zb2xlLmxvZyhcIlBsZWFzZSBzcGVjaWZ5IGEgc291cmNlIGZpcnN0IC0gYm94UmVmcmVzaCgpXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvL3RoZSBib3hcbiAgICAgICAgICAgIHZhciBib3ggPSAkKHRoaXMpO1xuICAgICAgICAgICAgLy90aGUgYnV0dG9uXG4gICAgICAgICAgICB2YXIgckJ0biA9IGJveC5maW5kKHNldHRpbmdzLnRyaWdnZXIpLmZpcnN0KCk7XG5cbiAgICAgICAgICAgIC8vT24gdHJpZ2dlciBjbGlja1xuICAgICAgICAgICAgckJ0bi5vbignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgICAgICAvL0FkZCBsb2FkaW5nIG92ZXJsYXlcbiAgICAgICAgICAgICAgICBzdGFydChib3gpO1xuXG4gICAgICAgICAgICAgICAgLy9QZXJmb3JtIGFqYXggY2FsbFxuICAgICAgICAgICAgICAgIGJveC5maW5kKFwiLmJveC1ib2R5XCIpLmxvYWQoc2V0dGluZ3Muc291cmNlLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIGRvbmUoYm94KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcblxuICAgICAgICBmdW5jdGlvbiBzdGFydChib3gpIHtcbiAgICAgICAgICAgIC8vQWRkIG92ZXJsYXkgYW5kIGxvYWRpbmcgaW1nXG4gICAgICAgICAgICBib3guYXBwZW5kKG92ZXJsYXkpO1xuXG4gICAgICAgICAgICBzZXR0aW5ncy5vbkxvYWRTdGFydC5jYWxsKGJveCk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBkb25lKGJveCkge1xuICAgICAgICAgICAgLy9SZW1vdmUgb3ZlcmxheSBhbmQgbG9hZGluZyBpbWdcbiAgICAgICAgICAgIGJveC5maW5kKG92ZXJsYXkpLnJlbW92ZSgpO1xuXG4gICAgICAgICAgICBzZXR0aW5ncy5vbkxvYWREb25lLmNhbGwoYm94KTtcbiAgICAgICAgfVxuICAgIH07XG59KShqUXVlcnkpO1xuXG4vKlxyXG4gKiBFWFBMSUNJVCBCT1ggQ09OVFJPTFNcclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogVGhpcyBpcyBhIGN1c3RvbSBwbHVnaW4gdG8gdXNlIHdpdGggdGhlIGNvbXBvbmVudCBCT1guIEl0IGFsbG93cyB5b3UgdG8gYWN0aXZhdGVcclxuICogYSBib3ggaW5zZXJ0ZWQgaW4gdGhlIERPTSBhZnRlciB0aGUgYXBwLmpzIHdhcyBsb2FkZWQsIHRvZ2dsZSBhbmQgcmVtb3ZlIGJveC5cclxuICpcclxuICogQHR5cGUgcGx1Z2luXHJcbiAqIEB1c2FnZSAkKFwiI2JveC13aWRnZXRcIikuYWN0aXZhdGVCb3goKTtcclxuICogQHVzYWdlICQoXCIjYm94LXdpZGdldFwiKS50b2dnbGVCb3goKTtcclxuICogQHVzYWdlICQoXCIjYm94LXdpZGdldFwiKS5yZW1vdmVCb3goKTtcclxuICovXG4oZnVuY3Rpb24gKCQpIHtcblxuICAgICd1c2Ugc3RyaWN0JztcblxuICAgICQuZm4uYWN0aXZhdGVCb3ggPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgICQuQWRtaW5MVEUuYm94V2lkZ2V0LmFjdGl2YXRlKHRoaXMpO1xuICAgIH07XG5cbiAgICAkLmZuLnRvZ2dsZUJveCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGJ1dHRvbiA9ICQoJC5BZG1pbkxURS5ib3hXaWRnZXQuc2VsZWN0b3JzLmNvbGxhcHNlLCB0aGlzKTtcbiAgICAgICAgJC5BZG1pbkxURS5ib3hXaWRnZXQuY29sbGFwc2UoYnV0dG9uKTtcbiAgICB9O1xuXG4gICAgJC5mbi5yZW1vdmVCb3ggPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBidXR0b24gPSAkKCQuQWRtaW5MVEUuYm94V2lkZ2V0LnNlbGVjdG9ycy5yZW1vdmUsIHRoaXMpO1xuICAgICAgICAkLkFkbWluTFRFLmJveFdpZGdldC5yZW1vdmUoYnV0dG9uKTtcbiAgICB9O1xufSkoalF1ZXJ5KTtcblxuLypcclxuICogVE9ETyBMSVNUIENVU1RPTSBQTFVHSU5cclxuICogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogVGhpcyBwbHVnaW4gZGVwZW5kcyBvbiBpQ2hlY2sgcGx1Z2luIGZvciBjaGVja2JveCBhbmQgcmFkaW8gaW5wdXRzXHJcbiAqXHJcbiAqIEB0eXBlIHBsdWdpblxyXG4gKiBAdXNhZ2UgJChcIiN0b2RvLXdpZGdldFwiKS50b2RvbGlzdCggb3B0aW9ucyApO1xyXG4gKi9cbihmdW5jdGlvbiAoJCkge1xuXG4gICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgJC5mbi50b2RvbGlzdCA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgICAgIC8vIFJlbmRlciBvcHRpb25zXG4gICAgICAgIHZhciBzZXR0aW5ncyA9ICQuZXh0ZW5kKHtcbiAgICAgICAgICAgIC8vV2hlbiB0aGUgdXNlciBjaGVja3MgdGhlIGlucHV0XG4gICAgICAgICAgICBvbkNoZWNrOiBmdW5jdGlvbiBvbkNoZWNrKGVsZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBlbGU7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgLy9XaGVuIHRoZSB1c2VyIHVuY2hlY2tzIHRoZSBpbnB1dFxuICAgICAgICAgICAgb25VbmNoZWNrOiBmdW5jdGlvbiBvblVuY2hlY2soZWxlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVsZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSwgb3B0aW9ucyk7XG5cbiAgICAgICAgcmV0dXJuIHRoaXMuZWFjaChmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgJC5mbi5pQ2hlY2sgIT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICAkKCdpbnB1dCcsIHRoaXMpLm9uKCdpZkNoZWNrZWQnLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBlbGUgPSAkKHRoaXMpLnBhcmVudHMoXCJsaVwiKS5maXJzdCgpO1xuICAgICAgICAgICAgICAgICAgICBlbGUudG9nZ2xlQ2xhc3MoXCJkb25lXCIpO1xuICAgICAgICAgICAgICAgICAgICBzZXR0aW5ncy5vbkNoZWNrLmNhbGwoZWxlKTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICQoJ2lucHV0JywgdGhpcykub24oJ2lmVW5jaGVja2VkJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZWxlID0gJCh0aGlzKS5wYXJlbnRzKFwibGlcIikuZmlyc3QoKTtcbiAgICAgICAgICAgICAgICAgICAgZWxlLnRvZ2dsZUNsYXNzKFwiZG9uZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgc2V0dGluZ3Mub25VbmNoZWNrLmNhbGwoZWxlKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgJCgnaW5wdXQnLCB0aGlzKS5vbignY2hhbmdlJywgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZWxlID0gJCh0aGlzKS5wYXJlbnRzKFwibGlcIikuZmlyc3QoKTtcbiAgICAgICAgICAgICAgICAgICAgZWxlLnRvZ2dsZUNsYXNzKFwiZG9uZVwiKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCQoJ2lucHV0JywgZWxlKS5pcyhcIjpjaGVja2VkXCIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXR0aW5ncy5vbkNoZWNrLmNhbGwoZWxlKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNldHRpbmdzLm9uVW5jaGVjay5jYWxsKGVsZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfTtcbn0pKGpRdWVyeSk7XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHJlc291cmNlcy9hc3NldHMvanMvYXBwLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7QUFlQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7OztBQVVBO0FBQ0E7Ozs7OztBQU1BOzs7O0FBSUE7QUFDQTtBQUNBOzs7O0FBSUE7O0FBRUE7O0FBRUE7O0FBRUE7Ozs7QUFJQTs7QUFFQTs7QUFFQTtBQUNBOzs7OztBQUtBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTs7O0FBR0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7QUFRQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTs7Ozs7Ozs7Ozs7QUFXQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7QUFRQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7O0FBU0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7OztBQVFBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7OztBQVVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7Ozs7Ozs7OztBQWdCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7QUFZQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7O0FBU0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }
/******/ ]);